version: '3.8'

services:
  ludo-backend:
    image: ghcr.io/aybarci/ludogame/ludo-backend:latest
    container_name: ludo-backend
    restart: unless-stopped
    pull_policy: always
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - HOSTNAME=0.0.0.0
      - PORT=3001
      - DB_SERVER=${DB_SERVER}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT:-1433}
      - DB_ENCRYPT=${DB_ENCRYPT:-false}
      - DB_TRUST_SERVER_CERTIFICATE=${DB_TRUST_SERVER_CERTIFICATE:-true}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_HOST=${REDIS_HOST:-ludo-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - VATAN_SMS_API_ID=${VATAN_SMS_API_ID}
      - VATAN_SMS_API_KEY=${VATAN_SMS_API_KEY}
      - VATAN_SMS_SENDER=${VATAN_SMS_SENDER:-Midpot}
      - SMS_TEST_MODE=${SMS_TEST_MODE:-false}
      - SMS_RATE_LIMIT_ENABLED=${SMS_RATE_LIMIT_ENABLED:-true}
      - SMS_DAILY_LIMIT=${SMS_DAILY_LIMIT:-1000}
      - SMS_HOURLY_LIMIT=${SMS_HOURLY_LIMIT:-100}
      - SMS_COOLDOWN_MS=${SMS_COOLDOWN_MS:-60000}
    volumes:
      - ./logs:/app/logs
    networks:
      - nginx-proxy-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ludo-backend.rule=Host(`ludoturcoapi.istekbilisim.com`)"
      - "traefik.http.routers.ludo-backend.tls=true"
      - "traefik.http.routers.ludo-backend.tls.certresolver=letsencrypt"
      - "traefik.http.services.ludo-backend.loadbalancer.server.port=3001"
      - "traefik.http.routers.ludo-backend.middlewares=security-headers,rate-limit,compression,circuit-breaker"
      - "traefik.docker.network=nginx-proxy-network"

  redis:
    image: redis:7-alpine
    container_name: ludo-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - nginx-proxy-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  nginx-proxy-network:
    external: true

volumes:
  redis-data:
    driver: local
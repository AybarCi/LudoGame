version: '3.8'

services:
  ludo-backend:
    build:
      context: ../
      dockerfile: deployment/Dockerfile
      args:
        - VATAN_SMS_API_ID=${VATAN_SMS_API_ID}
        - VATAN_SMS_API_KEY=${VATAN_SMS_API_KEY}
        - VATAN_SMS_SENDER=${VATAN_SMS_SENDER}
    container_name: ludo-backend-production
    ports:
      - "3001:3001"
    env_file:
      - stack.env
    environment:
      # Override only if needed - stack.env has priority
      - NODE_ENV=production
      - SMS_TEST_MODE=false
    
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./temp:/app/temp
    
    restart: unless-stopped
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    
    # Security
    security_opt:
      - no-new-privileges:true
    
    networks:
      - ludo-production-network

  # Optional: Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: ludo-redis-production
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - ludo-production-network

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: ludo-nginx-production
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - ludo-backend
    restart: unless-stopped
    networks:
      - ludo-production-network

networks:
  ludo-production-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis_data:
    driver: local
  logs:
    driver: local
  uploads:
    driver: local
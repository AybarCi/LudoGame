version: '3.8'

services:
  ludo-backend:
    image: ghcr.io/${GITHUB_REPOSITORY:-your-org}/ludo-backend:${VERSION:-latest}
    container_name: ludo-backend-${VERSION:-latest}
    ports:
      - "3001:3001"
    environment:
      # Production Database Configuration
      - DB_SERVER=${DB_SERVER:-mssql.istekbilisim.com}
      - DB_USER=${DB_USER:-sa}
      - DB_PASSWORD=${DB_PASSWORD:-SeKo153759++}
      - DB_DATABASE=${DB_DATABASE:-ludoturcodb}
      - DB_PORT=${DB_PORT:-1433}
      - DB_ENCRYPT=${DB_ENCRYPT:-false}
      - DB_TRUST_SERVER_CERTIFICATE=${DB_TRUST_SERVER_CERTIFICATE:-true}
      
      # JWT Configuration
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-24h}
      - JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN:-7d}
      
      # Application Configuration
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-3001}
      - HOST=${HOST:-0.0.0.0}
      
      # CORS Configuration
      - CORS_ORIGIN=${CORS_ORIGIN}
      - CORS_CREDENTIALS=${CORS_CREDENTIALS:-true}
      
      # Rate Limiting
      - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS:-900000}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS:-100}
      
      # Logging
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_FILE=${LOG_FILE:-/app/logs/production.log}
      
      # Redis Configuration
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      
      # SMS Configuration
      - VATAN_SMS_API_ID=${VATAN_SMS_API_ID}
      - VATAN_SMS_API_KEY=${VATAN_SMS_API_KEY}
      - VATAN_SMS_SENDER=${VATAN_SMS_SENDER}
      - SMS_TEST_MODE=${SMS_TEST_MODE:-false}
      - SMS_TIMEOUT=${SMS_TIMEOUT:-10000}
      - SMS_RETRY_COUNT=${SMS_RETRY_COUNT:-3}
      - SMS_COOLDOWN_MS=${SMS_COOLDOWN_MS:-60000}
      - SMS_DAILY_LIMIT=${SMS_DAILY_LIMIT:-1000}
      - SMS_HOURLY_LIMIT=${SMS_HOURLY_LIMIT:-100}
      - SMS_RATE_LIMIT_ENABLED=${SMS_RATE_LIMIT_ENABLED:-true}
      
      # Phone Encryption
      - PHONE_ENCRYPTION_KEY=${PHONE_ENCRYPTION_KEY}
      
      # Version Info
      - APP_VERSION=${VERSION:-latest}
      - BUILD_DATE=${BUILD_DATE}
      - GIT_COMMIT=${GIT_COMMIT}
    
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./temp:/app/temp
    
    restart: unless-stopped
    
    # Health check with version info
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ludo-backend.rule=Host(`ludoturcoapi.istekbilisim.com`)"
      - "traefik.http.routers.ludo-backend.tls=true"
      - "traefik.http.routers.ludo-backend.tls.certresolver=letsencrypt"
      - "traefik.http.services.ludo-backend.loadbalancer.server.port=3001"
      - "traefik.docker.network=nginx-proxy-network"
      - "com.ludo.version=${VERSION:-latest}"
      - "com.ludo.build-date=${BUILD_DATE}"
      - "com.ludo.git-commit=${GIT_COMMIT}"
    
    networks:
      - nginx-proxy-network

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: ludo-redis-${VERSION:-latest}
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - nginx-proxy-network

  # Traefik reverse proxy with automatic SSL
  traefik:
    image: traefik:v3.0
    container_name: ludo-traefik-${VERSION:-latest}
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
      - ./acme.json:/acme.json
      - ./logs/traefik:/var/log/traefik
    restart: unless-stopped
    environment:
      - TRAEFIK_VERSION=${VERSION:-latest}
    labels:
      - "com.ludo.version=${VERSION:-latest}"
    networks:
      - nginx-proxy-network

  # Watchtower for automatic updates
  watchtower:
    image: containrrr/watchtower
    container_name: ludo-watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    environment:
      - WATCHTOWER_POLL_INTERVAL=300  # 5 minutes
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_REVIVE_STOPPED=true
      - WATCHTOWER_LABEL_ENABLE=true
      - WATCHTOWER_NOTIFICATIONS=email
      - WATCHTOWER_NOTIFICATION_EMAIL_FROM=${NOTIFICATION_EMAIL_FROM}
      - WATCHTOWER_NOTIFICATION_EMAIL_TO=${NOTIFICATION_EMAIL_TO}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=${NOTIFICATION_EMAIL_SERVER}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=${NOTIFICATION_EMAIL_SERVER_PORT:-587}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=${NOTIFICATION_EMAIL_USER}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=${NOTIFICATION_EMAIL_PASSWORD}
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - nginx-proxy-network

networks:
  nginx-proxy-network:
    external: true

volumes:
  redis_data:
    driver: local
  logs:
    driver: local
  uploads:
    driver: local
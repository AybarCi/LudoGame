<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <system.webServer>
    <!-- IIS Node.js handler -->
    <handlers>
      <add name="iisnode" path="server.js" verb="*" modules="iisnode" />
    </handlers>
    
    <!-- URL Rewrite rules for Node.js -->
    <rewrite>
      <rules>
        <!-- Socket.IO support - WebSocket upgrade -->
        <rule name="SocketIO" stopProcessing="true">
          <match url="^socket.io/.*" />
          <conditions>
            <add input="{HTTP_UPGRADE}" pattern="^websocket$" />
            <add input="{HTTP_CONNECTION}" pattern="^upgrade$" />
          </conditions>
          <action type="Rewrite" url="server.js" logRewrittenUrl="true" />
        </rule>
        
        <!-- Socket.IO polling requests -->
        <rule name="SocketIOPolling" stopProcessing="true">
          <match url="^socket.io/.*" />
          <action type="Rewrite" url="server.js" logRewrittenUrl="true" />
        </rule>
        
        <!-- First we consider whether the incoming URL matches a physical file in the /public folder -->
        <rule name="StaticContent">
          <action type="Rewrite" url="public{REQUEST_URI}"/>
        </rule>
        
        <!-- All other URLs are mapped to the Node.js site entry point -->
        <rule name="DynamicContent">
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
          </conditions>
          <action type="Rewrite" url="server.js"/>
        </rule>
      </rules>
    </rewrite>
    
    <!-- IIS Node.js configuration -->
    <iisnode
      node_env="production"
      nodeProcessCountPerApplication="1"
      maxConcurrentRequestsPerProcess="1024"
      maxNamedPipeConnectionRetry="3"
      namedPipeConnectionRetryDelay="2000"
      maxNamedPipeConnectionPoolSize="512"
      maxNamedPipePooledConnectionAge="30000"
      asyncCompletionThreadCount="0"
      initialRequestBufferSize="4096"
      maxRequestBufferSize="65536"
      watchedFiles="*.js"
      uncFileChangesPollingInterval="5000"
      gracefulShutdownTimeout="60000"
      loggingEnabled="true"
      logDirectoryNameSuffix="logs"
      debuggingEnabled="false"
      devErrorsEnabled="false"
    />
    
    <!-- Security settings -->
    <security>
      <requestFiltering>
        <hiddenSegments>
          <add segment="node_modules" />
          <add segment=".git" />
          <add segment=".env" />
        </hiddenSegments>
      </requestFiltering>
    </security>
    
    <!-- Error pages -->
    <httpErrors errorMode="Detailed" />
    
    <!-- Default document -->
    <defaultDocument>
      <files>
        <clear />
        <add value="server.js" />
      </files>
    </defaultDocument>
    
    <!-- CORS headers for Socket.IO -->
    <httpProtocol>
      <customHeaders>
        <add name="Access-Control-Allow-Origin" value="*" />
        <add name="Access-Control-Allow-Methods" value="GET, POST, PUT, DELETE, OPTIONS" />
        <add name="Access-Control-Allow-Headers" value="Content-Type, Authorization" />
      </customHeaders>
    </httpProtocol>
  </system.webServer>
</configuration>